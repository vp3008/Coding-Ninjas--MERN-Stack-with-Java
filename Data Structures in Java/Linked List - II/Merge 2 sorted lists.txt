Merge Two Sorted LL
Send Feedback
Given two linked lists sorted in increasing order. Merge them in such a way that the result list is also sorted (in increasing order).
Try solving with O(1) auxiliary space (in-place). You just need to return the head of new linked list, don't print the elements.
Input format :
Line 1 : Linked list 1 elements of length n (separated by space and terminated by -1)
Line 2 : Linked list 2 elements of length m (separated by space and terminated by -1)
Output format :
Merged list elements (separated by space)
Constraints :
1 <= n, m <= 10^4
Sample Input :
 2 5 8 12 -1
 3 6 9 -1
Sample Output :
 2 3 5 6 8 9 12 
 
 
 public static LinkedListNode<Integer> mergeTwoList(LinkedListNode<Integer> head1, LinkedListNode<Integer> head2) {
		/* Your class should be named Solution
		 * Don't write main().
		 * Don't read input, it is passed as function argument.
		 * Return output and don't print it.
	 	 * Taking input and printing output is handled automatically.
		*/
        if(head1 == null)
            return head2;
        if(head2 == null)
            return head1;
        
        LinkedListNode<Integer> cur1 = head1;
        LinkedListNode<Integer> cur2 = head2;
		LinkedListNode<Integer> resultList = new LinkedListNode<>(0);
        LinkedListNode cur3 = resultList;
        while(cur1 != null && cur2 != null)
        {
            if(cur1.data < cur2.data)
            {
                cur3.next = cur1;
                cur1 = cur1.next;
            }
            else
            {
                cur3.next = cur2;
                cur2 = cur2.next;
            }
            cur3 = cur3.next;
        }
        if(cur1 != null)
            cur3.next = cur1;
        if(cur2 != null)
            cur3.next = cur2;
        return resultList.next;
	}

}