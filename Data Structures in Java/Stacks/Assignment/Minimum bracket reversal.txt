Given a string expression which consists only ‘}’ and ‘{‘. The expression may not be balanced. You need to find the minimum number of bracket reversals which are required to make the expression balanced.
Return -1 if the given expression can't be balanced.
Input Format :
String S
Output Format :
Required count
Sample Input 1 :
{{{
Sample Output 1 :
-1
Sample Input 2 :
{{{{}}
Sample Output 2 :
1



import java.util.Stack;

public class Solution {

	public static int countBracketReversals(String str) {
		  if(str.length()%2!=0){
	            return -1;
	        }
		
	
		Stack<Character> stack = new Stack<>();
		
		for(int i=0;i<str.length();i++) {
			
			if(str.charAt(i)=='{') {
				stack.push(str.charAt(i));
			}
			else if(str.charAt(i)=='}') {
				if(stack.isEmpty()) {
					stack.push(str.charAt(i));
				}
				else if(stack.peek()=='{') {
					stack.pop();
				}
				else {
					stack.push(str.charAt(i));
				}
			}
			
		}
		int count =0;
		while(!stack.isEmpty()) {
			char c1 = stack.pop();
			char c2 = stack.pop();
			if(c1==c2) {
				count++;
			}
			else {
				count+=2;
			}
		}
		return count;
		
	}
	
}